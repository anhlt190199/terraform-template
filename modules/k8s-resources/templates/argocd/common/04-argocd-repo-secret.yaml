---
apiVersion: v1
kind: Secret
metadata:
  name: anhlt-argocd-repo-secret
  namespace: ${metadata_namespace}
  annotations:
    managed-by: argocd.argoproj.io
data:
  username: ${repo_username}
  password: ${repo_password}
type: Opaque
---
# UPDATE THIS BECAUSE EVERYTIME ARGOCD CHANGE, THE SETUP WILL OVERWRITE THIS FILE AND LOST THE REPO CREDENTIALS
# argocd-cm include repository & user
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
  namespace: ${metadata_namespace}
data:
  # add a local user with apiKey and login capabilities
  #--- config user
  accounts.anhltci: apiKey, login
  accounts.anhltdev: apiKey, login
  accounts.anhltstaging: apiKey, login
  accounts.anhltproduction: apiKey, login
  # config exec
  exec.enabled: "true"
  #--- config repository git
  repositories: |
    - url: https://git.vmo.dev/c2/anhlt21054-anhlt-hello-kyc/operation-2023/anhlt-configure.git
      type: git
      usernameSecret:
        key: username
        name: anhlt-argocd-repo-secret
      passwordSecret:
        key: password
        name: anhlt-argocd-repo-secret
  # common
  timeout.reconciliation: 60s
  # TODO: add to documment
  # argocd vault plugin
  # configManagementPlugins: |
  #   - name: argocd-vault-plugin
  #     generate:
  #       command: ["argocd-vault-plugin"]
  #       args: ["generate", "./"]
  #   - name: argocd-vault-plugin-helm
  #     generate:
  #       command: ["sh", "-c"]
  #       args: ['helm template "$ARGOCD_APP_NAME" -n "$ARGOCD_APP_NAMESPACE" . | argocd-vault-plugin generate -']
  #   # This lets you pass args to the Helm invocation as described here: https://argocd-vault-plugin.readthedocs.io/en/stable/usage/#with-helm
  #   # IMPORTANT: passing $helm_args effectively allows users to run arbitrary code in the Argo CD repo-server.
  #   # Only use this when the users are completely trusted. If possible, determine which Helm arguments are needed by 
  #   # your users and explicitly pass only those arguments.
  #   - name: argocd-vault-plugin-helm-with-args
  #     generate:
  #       command: ["sh", "-c"]
  #       args: ['helm template "$ARGOCD_APP_NAME" -n "$ARGOCD_APP_NAMESPACE" $helm_args . | argocd-vault-plugin generate -']
  #   # This lets you pass a values file as a string as described here:
  #   # https://argocd-vault-plugin.readthedocs.io/en/stable/usage/#with-helm
  #   - name: argocd-vault-plugin-helm-with-values
  #     generate:
  #       command: ["bash", "-c"]
  #       args: ['helm template "$ARGOCD_APP_NAME" -n "$ARGOCD_APP_NAMESPACE" -f <(echo "$ARGOCD_ENV_HELM_VALUES") . | argocd-vault-plugin generate -']
  #   - name: argocd-vault-plugin-kustomize
  #     generate:
  #       command: ["sh", "-c"]
  #       args: ["kustomize build . | argocd-vault-plugin generate -"]

